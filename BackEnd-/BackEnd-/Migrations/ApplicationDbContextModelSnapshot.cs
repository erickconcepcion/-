// <auto-generated />
using System;
using BackEnd_;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BackEnd_.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BackEnd_.Models.Elemento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("TipoElemento")
                        .HasColumnType("int");

                    b.Property<decimal>("TipoGrupo")
                        .HasColumnType("numeric(18,2)");

                    b.Property<string>("Unidad")
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.ToTable("Elemento");
                });

            modelBuilder.Entity("BackEnd_.Models.ElementoPrecio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CostoKmXm3")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("DistanciaKm")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("ElementoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFinal")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaIngMod")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaInicial")
                        .HasColumnType("datetime");

                    b.Property<int>("GeneralCabId")
                        .HasColumnType("int");

                    b.Property<int>("Valor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ElementoId");

                    b.HasIndex("GeneralCabId");

                    b.ToTable("ElementoPrecio");
                });

            modelBuilder.Entity("BackEnd_.Models.General", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Auxiliar")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("GeneraCablId")
                        .HasColumnType("int");

                    b.Property<int?>("GeneralCabId")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("GeneralCabId");

                    b.ToTable("General");
                });

            modelBuilder.Entity("BackEnd_.Models.GeneralCab", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("IdEstado")
                        .HasColumnType("bit");

                    b.Property<int>("IdItemCab")
                        .HasColumnType("int");

                    b.Property<int>("IdTipo")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.ToTable("GeneralCab");
                });

            modelBuilder.Entity("BackEnd_.Models.Obra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoObra")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("IdCiudad")
                        .HasColumnType("int");

                    b.Property<string>("IdPersonalCliente")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("IdPersonalOferente")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("IdProvincia")
                        .HasColumnType("int");

                    b.Property<string>("NombreCliente")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("NombreObra")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("NombreOferente")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RegistroProfesional")
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.ToTable("Obra");
                });

            modelBuilder.Entity("BackEnd_.Models.ObraProyecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaCreacionProyecto")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Moneda")
                        .HasColumnType("money");

                    b.Property<int>("ObraId")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("ProyectoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ObraId");

                    b.HasIndex("ProyectoId")
                        .IsUnique();

                    b.ToTable("ObraProyecto");
                });

            modelBuilder.Entity("BackEnd_.Models.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("GeneralCabId")
                        .HasColumnType("int");

                    b.Property<string>("Identificacion")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("NombreCompleto")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("RegistroProfesional")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Telefono1")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Telefono2")
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("GeneralCabId");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("BackEnd_.Models.Proyecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoObra")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("NombreProyecto")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("NumeroVivienda")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Proyecto");
                });

            modelBuilder.Entity("BackEnd_.Models.ProyectoRubro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Porcentaje")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioTotal")
                        .HasColumnType("money");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("money");

                    b.Property<int>("ProyectoId")
                        .HasColumnType("int");

                    b.Property<int>("RubroId")
                        .HasColumnType("int");

                    b.Property<string>("Unidad")
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("ProyectoId");

                    b.HasIndex("RubroId");

                    b.ToTable("ProyectoRubro");
                });

            modelBuilder.Entity("BackEnd_.Models.Rubro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("NombreRubro")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<decimal>("PorcentajeTransporte")
                        .HasColumnType("money");

                    b.Property<int>("TipoRubro")
                        .HasColumnType("int");

                    b.Property<string>("Unidad")
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.ToTable("Rubro");
                });

            modelBuilder.Entity("BackEnd_.Models.RubroElemento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("Costo")
                        .HasColumnType("money");

                    b.Property<decimal>("CostoHora")
                        .HasColumnType("money");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Dias")
                        .HasColumnType("int");

                    b.Property<int>("ElementoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("numeric(18,2)");

                    b.Property<decimal>("Rendimiento")
                        .HasColumnType("numeric(18,2)");

                    b.Property<int>("RubroId")
                        .HasColumnType("int");

                    b.Property<string>("TipoElemento")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Unidad")
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("ElementoId");

                    b.HasIndex("RubroId");

                    b.ToTable("RubroElemento");
                });

            modelBuilder.Entity("BackEnd_.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clave")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime>("FechaExpiracion")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Identificacion")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("NombreUsuario")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<string>("Usuarios")
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("BackEnd_.Models.ElementoPrecio", b =>
                {
                    b.HasOne("BackEnd_.Models.Elemento", "Elemento")
                        .WithMany()
                        .HasForeignKey("ElementoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd_.Models.GeneralCab", "GeneralCab")
                        .WithMany()
                        .HasForeignKey("GeneralCabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BackEnd_.Models.General", b =>
                {
                    b.HasOne("BackEnd_.Models.GeneralCab", "GeneralCab")
                        .WithMany()
                        .HasForeignKey("GeneralCabId");
                });

            modelBuilder.Entity("BackEnd_.Models.ObraProyecto", b =>
                {
                    b.HasOne("BackEnd_.Models.Obra", "Obra")
                        .WithMany()
                        .HasForeignKey("ObraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd_.Models.Proyecto", "Proyecto")
                        .WithOne("ObraProyecto")
                        .HasForeignKey("BackEnd_.Models.ObraProyecto", "ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BackEnd_.Models.Persona", b =>
                {
                    b.HasOne("BackEnd_.Models.GeneralCab", "GeneralCab")
                        .WithMany()
                        .HasForeignKey("GeneralCabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BackEnd_.Models.ProyectoRubro", b =>
                {
                    b.HasOne("BackEnd_.Models.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd_.Models.Rubro", "Rubro")
                        .WithMany()
                        .HasForeignKey("RubroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BackEnd_.Models.RubroElemento", b =>
                {
                    b.HasOne("BackEnd_.Models.Elemento", "Elemento")
                        .WithMany()
                        .HasForeignKey("ElementoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd_.Models.Rubro", "Rubro")
                        .WithMany()
                        .HasForeignKey("RubroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BackEnd_.Models.Usuario", b =>
                {
                    b.HasOne("BackEnd_.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
